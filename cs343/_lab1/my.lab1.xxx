// DO NOT change anything in this file. Your code must compile with this main
// on the linux machines.

// Make sure the file containing the member function source is: poly.cpp
// Use all lowercase in the file names.

// This main does not do a thorough job of testing.  When testing arrays,
// be sure to test the middle and also all the boundary conditions.  Test
// values on the boundary and outside the boundaries, i.e., too big/small.

#include "poly.h"
#include <iostream>
using namespace std;

int main () 
{
   Poly A(5,7), B(3,4), C(2), D(A), X, Y;

   cout << "A= " << A << endl;
   cout << "B= " << B << endl;
   cout << "C= " << C << endl;
   cout << "D= " << D << endl;
   cout << "X= " << X << endl;
   cout << "Y= " << Y << endl;

   //cout << "B= " << B;
   A.setCoeff(2,2);
   cout << "new A= " << A;
   A.setCoeff(-2,3);
   cout << "new A= " << A;
   A.setCoeff(-2);
   cout << "new A= " << A << endl;
   cout << "A+B =" << A + B << endl;

   // set polynomials A and B to desired values
   
   
   
   
   // A = +5x^7 -4x^3 +10x -2
   // B = +3x^4 +1x^3 



   /*cout << "Enter terms for polynomial A.  Enter a coefficient " << endl
        << "then exponent for each term. Enter 0 0 to terminate." << endl;
   cin >> A;                                     // or use a bunch of setCoeff

   cout << "Enter terms for polynomial B.  Enter a coefficient " << endl
        << "then exponent for each term. Enter 0 0 to terminate." << endl;
   cin >> B;                                     // or use a bunch of setCoeff
   */
   // outputs exactly what is in quotes: "A = +5x^7 -4x^3 +10x -2"
   cout << "A =" << A << endl;
   // outputs exactly what is in quotes: "B = +3x^4 +1x^3"
   cout << "B =" << B << endl << endl;

   C = A + B;  
   cout << "Compute C = A + B" << C << endl << endl;
   
   cout <<  ( (A == B) ? "A == B" : "A is not == B" ) << endl;
   cout <<  ( (A != B) ? "A is not == B" : "A == B" ) << endl;
   Poly F = A;
   cout <<  ( (A == F) ? "A == F" : "A is not == F" ) << endl;

   C = A - B;
   cout << "Compute C = A - B" << C << endl << endl;

   Poly G,H,I;

   G.setCoeff(2,2);
   G.setCoeff(1,1);
   G.setCoeff(3);

   H.setCoeff(2,2);
   H.setCoeff(1,1);
   H.setCoeff(4);

   

   cout << "G=" << G << endl;
   cout << "H=" << H << endl;
   cout << "Compute  I = G * H" << endl;
   cout << "Before: I =" << I << endl;

   I = G * H;
   cout << "After:  I =" << I << endl << endl;

   Poly J(2,2);

   cout << "J + 15 = " << J + 15 << endl;

   /*cout << "Test assignment operators" << endl;
   X = C = D = D;  
   Y += A -= B *= A;
   cout << "X =" << X << endl;
   cout << "Y =" << Y << endl << endl;

   cout << "Get and Set coefficient" << endl;
   int coeff = D.getCoeff(0); 
   cout << "coeff of subscript 0 of D is: " << coeff << endl;
   cout << "Doing getCoeff for term -20000" << endl;
   coeff = D.getCoeff(-20000);              // handle value out of range
   D.setCoeff(50,0);                        // set x^0 coeff to 50
   D.setCoeff(50,20000);                    // set x^20000 coeff to 50
   cout << "D =" << D << endl << endl;
   */
   system("pause");
   return 0;
}

